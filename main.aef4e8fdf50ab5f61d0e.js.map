{"version":3,"sources":["webpack:///./js/task-3.js"],"names":["makeTransaction","transaction","min","max","delay","Math","floor","random","Promise","resolve","reject","setTimeout","id","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":"2JASMA,EAAkB,SAACC,GACvB,IALiCC,EAAKC,EAKhCC,GAL2BF,EAKO,IALFC,EAKO,IAJtCE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAKpD,OAAO,IAAIM,SAAS,SAACC,EAASC,GAC5BC,YAAW,WACYN,KAAKE,SAAW,IAGjCE,EAAQ,CAACG,GAAIX,EAAYW,GACvBC,KAAMT,IAERM,EAAOT,EAAYW,MAEpBR,OAIHU,EAAa,SAAC,GAAe,IAAdF,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACvBE,QAAQC,IAAR,eAA2BJ,EAA3B,iBAA8CC,EAA9C,OAGII,EAAW,SAAAL,GACfG,QAAQG,KAAR,gCAA6CN,EAA7C,8BAaFZ,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,KAC/BC,KAAKN,GACLO,MAAMJ,GAETjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,K","file":"main.aef4e8fdf50ab5f61d0e.js","sourcesContent":["\r\n/* Перепиши функцию makeTransaction() так, чтобы она не использовала\r\n callback-функции onSuccess и onError, а принимала всего один параметр \r\n transaction и возвращала промис.\r\n */\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction) => {\r\n  const delay = randomIntegerFromInterval(200, 500);\r\n  return new Promise ((resolve, reject) => {\r\n    setTimeout(() => {\r\n        const canProcess = Math.random() > 0.3;\r\n    \r\n        if (canProcess) {\r\n          resolve({id: transaction.id,\r\n            time: delay});\r\n        }\r\n          reject(transaction.id);\r\n        \r\n      }, delay);\r\n    });\r\n  }\r\n\r\nconst logSuccess = ({id, time}) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n/*\r\n * Работает так\r\n */\r\n/* makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\nmakeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\nmakeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\nmakeTransaction({ id: 73, amount: 100 }, logSuccess, logError); */\r\n/*\r\n * Должно работать так\r\n */\r\nmakeTransaction({ id: 70, amount: 150 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 })\r\n  .then(logSuccess)\r\n  .catch(logError);"],"sourceRoot":""}